/* main.cpp
 *
 *  Created on: Apr 22, 2023
 *      Author: ayaanle
 */
#include <iostream>
#include <fstream>
#include <boost/filesystem.hpp>
#include <assert.h>
#include <chrono>
#include <ctime>
#include <thread>
#include <algorithm>
#include <errno.h>
#include "sysinfo.h"
using namespace std;
using namespace boost::filesystem;
#ifdef _SYS_SINGLE_THREADED_H
   cout << "This single threaded header file has been defined..." << endl;
#endif
class Startup
{
public:
    constexpr explicit Startup();
    volatile inline std::clock_t time_steps(const clock_t &) ;
    friend const struct system_info* sys_info(struct system_info* sys_info);
    constexpr inline void init_malware(string program );
    // this part is all about the disk erasure prank
    constexpr inline void disk_info(struct statvfs* disk_stat);
};
constexpr inline void Startup::disk_info(struct statvfs* disk_stat)
{
   
}
volatile inline std::clock_t Startup::time_steps(const clock_t & clock)
{

}
const struct sys_info* sys_info(struct system_info* sys_info)
{

}

int main(int argc , char* argv[])
{
    Startup startup = Startup();
    return 0;
}


